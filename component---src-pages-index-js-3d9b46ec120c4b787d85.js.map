{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["MainContainer","styled","Main","mixins","sidePadding","IndexPage","data","useEffect","window","location","href","indexOf","id","split","element","document","getElementById","scrollIntoView","showMeta","hero","edges","about","featured","projects","blogPosts","contact"],"mappings":"4FAAA,oEAOMA,EAAgBC,YAAOC,KAAV,2EAAGD,CAAH,+BACfE,IAAOC,aAqCIC,UAjCG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAenB,OAbAC,qBAAU,WACR,IAA2C,IAAvCC,OAAOC,SAASC,KAAKC,QAAQ,KAAa,CAC5C,IACMC,EADMJ,OAAOC,SAASC,KACbG,MAAM,KAAK,GACpBC,EAAUC,SAASC,eAAeJ,GACxC,IACEE,EAAQG,iBACR,eAOJ,kBAAC,IAAD,CAAQC,UAAU,GAChB,kBAAClB,EAAD,CAAeY,GAAG,WAChB,kBAAC,IAAD,CAAMN,KAAMA,EAAKa,KAAKC,QACtB,kBAAC,IAAD,CAAOd,KAAMA,EAAKe,MAAMD,QACxB,kBAAC,IAAD,CAAUd,KAAMA,EAAKgB,SAASF,QAC9B,kBAAC,IAAD,CAAUd,KAAMA,EAAKiB,SAASH,QAC9B,kBAAC,IAAD,CAAWd,KAAMA,EAAKkB,UAAUJ,QAChC,kBAAC,IAAD,CAASd,KAAMA,EAAKmB,QAAQL","file":"component---src-pages-index-js-3d9b46ec120c4b787d85.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Layout, Hero, About, Featured, Projects, Contact, BlogPosts } from '@components';\nimport styled from 'styled-components';\nimport { mixins, Main } from '@styles';\n\nconst MainContainer = styled(Main)`\n  ${mixins.sidePadding};\n  counter-reset: section;\n`;\n\nconst IndexPage = ({ data }) => {\n  // scroll to the specific section if the site is loaded again\n  useEffect(() => {\n    if (window.location.href.indexOf('#') !== -1) {\n      const url = window.location.href;\n      const id = url.split('#')[1];\n      const element = document.getElementById(id);\n      try {\n        element.scrollIntoView();\n      } catch {\n        // do nothing\n      }\n    }\n  });\n\n  return (\n    <Layout showMeta={true}>\n      <MainContainer id=\"content\">\n        <Hero data={data.hero.edges} />\n        <About data={data.about.edges} />\n        <Featured data={data.featured.edges} />\n        <Projects data={data.projects.edges} />\n        <BlogPosts data={data.blogPosts.edges} />\n        <Contact data={data.contact.edges} />\n      </MainContainer>\n    </Layout>\n  );\n};\n\nIndexPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  {\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            name\n            subtitle\n            contactText\n          }\n          html\n        }\n      }\n    }\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            avatar {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            skills\n          }\n          html\n        }\n      }\n    }\n    featured: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            tech\n            github\n            external\n            show\n          }\n          html\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            image\n            tech\n            github\n            external\n            show\n          }\n          html\n        }\n      }\n    }\n    blogPosts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 6\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            slug\n            tags\n            show\n            authorName\n            authorImg {\n              childImageSharp {\n                fluid(maxWidth: 30, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            featuredImg {\n              childImageSharp {\n                fluid(maxWidth: 300, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n          timeToRead\n          excerpt(pruneLength: 300)\n          html\n        }\n      }\n    }\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}