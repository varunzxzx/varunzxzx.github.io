{"version":3,"sources":["webpack:///./src/components/emoji.js","webpack:///./src/components/image.js","webpack:///./src/templates/blog-post.js"],"names":["Emoji","props","react_default","a","createElement","react_emoji_render_lib","text","children","toString","svg","onlyEmojiClassName","ImageBox","styled","div","withConfig","displayName","componentId","theme","colors","white","fontSizes","medium","Image","render","_this$props","this","caption","alt","src","layout","console","log","className","React","Component","MainContainer","Main","mixins","sidePadding","CommentsContainer","green","HeroContainer","Section","flexCenter","media","tablet","_templateObject","Title","h1","desktop","_templateObject2","_templateObject3","phablet","_templateObject4","phone","_templateObject5","Author","h3","small","fonts","SFMono","_templateObject6","_templateObject7","smallish","Avatar","Img","FeaturedImage","PostBody","_templateObject8","Meta","_templateObject9","_templateObject10","Credits","PostLinks","large","_templateObject11","renderAst","rehypeReact","components","emoji","editor","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","image-box","Compiler","BlogPostTemplate","post","data","markdownRemark","site","pageContext","previous","next","imgUrl","siteUrl","frontmatter","featuredImg","childImageSharp","fluid","pageUrl","slug","pageTitle","title","siteMetadata","pageDescription","excerpt","components_layout","showMeta","Helmet_default","itemProp","lang","name","content","tags","join","property","id","timeToRead","map","tag","key","htmlAst","authorImg","authorName","date","gatsby_browser_entry","to","lib_default","DiscussionEmbed","shortname","config","url","identifier","filePath","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-f2a6a5a2c6633c58e8a3.js","sourcesContent":["import React from 'react';\r\nimport { Twemoji } from 'react-emoji-render';\r\n\r\nconst Emoji = props => <Twemoji text={props.children.toString()} svg onlyEmojiClassName=\"emoji\" />;\r\n\r\nexport default Emoji;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { theme } from '../styles';\r\n\r\nconst ImageBox = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n  margin-bottom: 0.5em;\r\n\r\n  img {\r\n    max-width: 100%;\r\n    display: inline-block;\r\n    border: 3px solid #fff;\r\n  }\r\n\r\n  .caption {\r\n    display: block;\r\n    color: ${theme.colors.white};\r\n    font-size: ${theme.fontSizes.medium};\r\n  }\r\n\r\n  &.inline-left {\r\n    display: inline-block;\r\n    float: left;\r\n    width: unset;\r\n    margin-right: 1em;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nclass Image extends React.Component {\r\n  render() {\r\n    const { caption, alt, src, layout } = this.props;\r\n    console.log(this.props);\r\n\r\n    return (\r\n      <ImageBox className={layout}>\r\n        <img alt={alt || caption} src={src} />\r\n        <span className=\"caption\">{caption}</span>\r\n      </ImageBox>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import path from 'path';\r\nimport React from 'react';\r\nimport Img from 'gatsby-image';\r\nimport { siteUrl } from '@config';\r\nimport { Link, graphql } from 'gatsby';\r\nimport Disqus from 'disqus-react';\r\nimport Helmet from 'react-helmet';\r\nimport Loadable from 'react-loadable';\r\nimport rehypeReact from 'rehype-react';\r\nimport styled from 'styled-components';\r\n\r\nimport Layout from '../components/layout';\r\nimport Emoji from '../components/emoji';\r\nimport Image from '../components/image';\r\nimport { theme, mixins, media, Main, Section } from '../styles';\r\n\r\nconst MainContainer = styled(Main)`\r\n  ${mixins.sidePadding};\r\n  counter-reset: section;\r\n`;\r\n\r\nconst CommentsContainer = styled.div`\r\n  .reaction-item__button {\r\n    border-color: ${theme.colors.green};\r\n  }\r\n`;\r\n\r\nconst HeroContainer = styled(Section)`\r\n  ${mixins.flexCenter};\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  min-height: 100vh;\r\n  padding-top: 200px;\r\n  ${media.tablet`padding-top: 150px;`};\r\n  div {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 80px;\r\n  line-height: 1.1;\r\n  margin: 0;\r\n  ${media.desktop`font-size: 70px;`};\r\n  ${media.tablet`font-size: 60px;`};\r\n  ${media.phablet`font-size: 50px;`};\r\n  ${media.phone`font-size: 40px;`};\r\n`;\r\n\r\nconst Author = styled.h3`\r\n  display: inline;\r\n  color: ${theme.colors.green};\r\n  margin: 0 0 20px 3px;\r\n  font-size: ${theme.fontSizes.small};\r\n  font-family: ${theme.fonts.SFMono};\r\n  font-weight: normal;\r\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\r\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\r\n`;\r\n\r\nconst Avatar = styled(Img)`\r\n  width: 30px;\r\n  max-width: 30px;\r\n  max-height: 30px;\r\n  vertical-align: middle;\r\n  position: relative;\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  border: 3px solid #fff;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst FeaturedImage = styled(Img)`\r\n  width: 100%;\r\n  vertical-align: middle;\r\n  position: relative;\r\n  border: 3px solid #fff;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst PostBody = styled.div`\r\n  margin-top: 40px;\r\n  strong {\r\n    color: white;\r\n  }\r\n  .emoji {\r\n    margin-right: 5px;\r\n    img {\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n  ul {\r\n    list-style-type: '# ';\r\n  }\r\n  ul,\r\n  ol {\r\n    li {\r\n      margin-block-end: 0.5em;\r\n      margin-block-start: 0.5em;\r\n    }\r\n    ${media.phone`\r\n    padding-inline-start: 15px;\r\n  `};\r\n  }\r\n  a {\r\n    color: ${theme.colors.green};\r\n  }\r\n  blockquote {\r\n    border-left: 3px solid;\r\n    box-sizing: border-box;\r\n    padding: 0.5em 1em;\r\n    margin: 0;\r\n    margin-bottom: 0px;\r\n    margin-bottom: 1em;\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n  ol {\r\n    li {\r\n      list-style: none;\r\n      counter-increment: item 1;\r\n      &::before {\r\n        content: '0' counter(item) '.';\r\n        text-align: right;\r\n        color: #64ffda;\r\n        margin-right: 0.5em;\r\n        font-size: 14px;\r\n        font-family: SF Mono, Fira Code, Fira Mono, monospace;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Meta = styled.h3`\r\n  display: inline;\r\n  color: ${theme.colors.green};\r\n  margin: 0 0 20px 3px;\r\n  font-size: ${theme.fontSizes.small};\r\n  font-family: ${theme.fonts.SFMono};\r\n  font-weight: normal;\r\n  word-wrap: break-word;\r\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\r\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\r\n  .tag {\r\n    margin-left: 10px;\r\n  }\r\n  .read-time {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nconst Credits = styled.div`\r\n  margin-top: 20px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst PostLinks = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 40px;\r\n  .next {\r\n    text-align: right;\r\n  }\r\n  .prevous {\r\n    text-align: left;\r\n  }\r\n  .previous,\r\n  .next {\r\n    flex: 1;\r\n    border-radius: 2px;\r\n    max-width: calc(50% - 15px);\r\n    padding: 10px 20px;\r\n    background: #172a45;\r\n    .title {\r\n      color: white;\r\n      font-size: 20px;\r\n      margin-bottom: 0;\r\n    }\r\n    .pos {\r\n      color: ${theme.colors.green};\r\n      font-size: ${theme.fontSizes.small};\r\n      margin-bottom: 5px;\r\n    }\r\n    .empty {\r\n      text-align: center;\r\n      margin-bottom: 0;\r\n      position: relative;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n    }\r\n    .excerpt {\r\n      font-size: ${theme.fontSizes.large};\r\n      margin-bottom: 0px;\r\n    }\r\n    ${Meta} {\r\n      font-size: 12px;\r\n      margin-bottom: 0;\r\n    }\r\n    &:hover {\r\n      -webkit-transform: translateY(-5px);\r\n      -ms-transform: translateY(-5px);\r\n      transform: translateY(-5px);\r\n      box-shadow: 0 2px 4px rgba(2, 12, 27, 0.9);\r\n    }\r\n  }\r\n  ${media.tablet`\r\n  flex-direction: column;\r\n    .next, .previous {\r\n      max-width: 100%;\r\n    }\r\n\r\n    .previous {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .next.latest, .previous.first {\r\n      display: none;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst renderAst = new rehypeReact({\r\n  createElement: React.createElement,\r\n  components: {\r\n    emoji: Emoji,\r\n    editor: Loadable({\r\n      loader: () => import('../components/editor'),\r\n      loading: () => null,\r\n    }),\r\n    'image-box': Image,\r\n  },\r\n}).Compiler;\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark;\r\n    const site = this.props.data.site;\r\n    const pageContext = this.props.pageContext;\r\n    const { previous, next } = pageContext;\r\n\r\n    const imgUrl = `${siteUrl}${post.frontmatter.featuredImg.childImageSharp.fluid.src}`;\r\n    const pageUrl = `${siteUrl}${post.frontmatter.slug}/`;\r\n    const pageTitle = `${post.frontmatter.title} | ${site.siteMetadata.title}`;\r\n    const pageDescription = post.excerpt;\r\n\r\n    return (\r\n      <Layout showMeta={false}>\r\n        <Helmet>\r\n          <title itemProp=\"name\" lang=\"en\">\r\n            {pageTitle}\r\n          </title>\r\n          <meta name=\"description\" content={pageDescription} />\r\n          <meta name=\"keywords\" content={(post.frontmatter.tags || []).join(',')} />\r\n          <meta property=\"og:title\" content={pageTitle} />\r\n          <meta property=\"og:description\" content={pageDescription} />\r\n          <meta property=\"og:type\" content=\"website\" />\r\n          <meta property=\"og:url\" content={pageUrl} />\r\n          <meta property=\"og:site_name\" content={site.siteMetadata.title} />\r\n          <meta property=\"og:image\" content={imgUrl} />\r\n          <meta itemProp=\"name\" content={site.siteMetadata.title} />\r\n          <meta itemProp=\"description\" content={pageDescription} />\r\n          <meta itemProp=\"image\" content={imgUrl} />\r\n          <meta name=\"twitter:url\" content={pageUrl} />\r\n          <meta name=\"twitter:title\" content={pageTitle} />\r\n          <meta name=\"twitter:description\" content={pageDescription} />\r\n          <meta name=\"twitter:image:src\" content={imgUrl} />\r\n          <meta name=\"twitter:image:alt\" content={pageTitle} />\r\n        </Helmet>\r\n        <MainContainer id=\"content\">\r\n          <HeroContainer>\r\n            <Title>{post.frontmatter.title}</Title>\r\n            <div>\r\n              <Meta>\r\n                <span className=\"read-time\">\r\n                  {post.timeToRead} Min{post.timeToRead > 1 ? 's' : ''} Read\r\n                </span>\r\n                {(post.frontmatter.tags || []).map(tag => (\r\n                  <span key={tag} className=\"tag\">\r\n                    #{tag}\r\n                  </span>\r\n                ))}\r\n              </Meta>\r\n            </div>\r\n            <FeaturedImage\r\n              fluid={post.frontmatter.featuredImg.childImageSharp.fluid}\r\n              alt={post.frontmatter.title}\r\n            />\r\n            <PostBody>{renderAst(post.htmlAst)}</PostBody>\r\n            <Credits>\r\n              <Avatar fluid={post.frontmatter.authorImg.childImageSharp.fluid} alt=\"Avatar\" />\r\n              <Author>\r\n                By {post.frontmatter.authorName} on {post.frontmatter.date}\r\n              </Author>\r\n            </Credits>\r\n            <PostLinks>\r\n              {previous ? (\r\n                <Link className={'previous'} to={previous.frontmatter.slug}>\r\n                  <p className=\"pos\">{'<< previous'}</p>\r\n                  <h3 className=\"title\">{previous.frontmatter.title}</h3>\r\n                  <p className=\"excerpt\">{previous.excerpt}</p>\r\n                  <Meta>\r\n                    <span className=\"read-time\">\r\n                      {previous.timeToRead} {previous.timeToRead > 1 ? 'Mins' : 'Min'} Read\r\n                    </span>\r\n                    {(previous.frontmatter.tags || []).map(tag => (\r\n                      <span key={tag} className=\"tag\">\r\n                        #{tag}\r\n                      </span>\r\n                    ))}\r\n                  </Meta>\r\n                </Link>\r\n              ) : (\r\n                <div className=\"previous first\">\r\n                  <p className=\"empty\">This is the first post.</p>\r\n                </div>\r\n              )}\r\n              {next ? (\r\n                <Link className={'next'} to={next.frontmatter.slug}>\r\n                  <p className=\"pos\">{'next >>'}</p>\r\n                  <h3 className=\"title\">{next.frontmatter.title}</h3>\r\n                  <p className=\"excerpt\">{next.excerpt}</p>\r\n                  <Meta>\r\n                    <span className=\"read-time\">\r\n                      {next.timeToRead} {next.timeToRead > 1 ? 'Mins' : 'Min'} Read\r\n                    </span>\r\n                    {(next.frontmatter.tags || []).map(tag => (\r\n                      <span key={tag} className=\"tag\">\r\n                        #{tag}\r\n                      </span>\r\n                    ))}\r\n                  </Meta>\r\n                </Link>\r\n              ) : (\r\n                <div className=\"next latest\">\r\n                  <p className=\"empty\">This is the latest post</p>\r\n                </div>\r\n              )}\r\n            </PostLinks>\r\n            <CommentsContainer>\r\n              <Disqus.DiscussionEmbed\r\n                shortname={'varunzxzx'}\r\n                config={{\r\n                  url: `${siteUrl}${post.frontmatter.slug}`,\r\n                  identifier: pageContext.filePath,\r\n                  title: post.frontmatter.title,\r\n                }}\r\n              />\r\n            </CommentsContainer>\r\n          </HeroContainer>\r\n        </MainContainer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        siteUrl\r\n      }\r\n    }\r\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\r\n      excerpt(pruneLength: 160)\r\n      htmlAst\r\n      timeToRead\r\n      frontmatter {\r\n        title\r\n        slug\r\n        show\r\n        tags\r\n        date\r\n        authorName\r\n        featuredImg {\r\n          childImageSharp {\r\n            fluid(maxWidth: 1000, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n              src\r\n            }\r\n          }\r\n        }\r\n        authorImg {\r\n          childImageSharp {\r\n            fluid(maxWidth: 30, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}