{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["MainContainer","styled","Main","withConfig","displayName","componentId","mixins","sidePadding","IndexPage","_ref","data","useEffect","window","location","href","indexOf","id","split","element","document","getElementById","scrollIntoView","_unused","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_3__","showMeta","hero","edges","about","featured","projects","blogPosts","contact","propTypes","PropTypes","object","isRequired","pageQuery"],"mappings":"8MAOMA,EAAgBC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,+BACfK,IAAOC,aAILC,EAAY,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAenB,OAbAC,oBAAU,WACR,IAA2C,IAAvCC,OAAOC,SAASC,KAAKC,QAAQ,KAAa,CAC5C,IACMC,EADMJ,OAAOC,SAASC,KACbG,MAAM,KAAK,GACpBC,EAAUC,SAASC,eAAeJ,GACxC,IACEE,EAAQG,iBACR,MAAAC,QAOJC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,UAAU,GAChBJ,EAAAC,EAAAC,cAACzB,EAAD,CAAegB,GAAG,WAChBO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMhB,KAAMA,EAAKkB,KAAKC,QACtBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOhB,KAAMA,EAAKoB,MAAMD,QACxBN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUhB,KAAMA,EAAKqB,SAASF,QAC9BN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUhB,KAAMA,EAAKsB,SAASH,QAC9BN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWhB,KAAMA,EAAKuB,UAAUJ,QAChCN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAShB,KAAMA,EAAKwB,QAAQL,WAMpCrB,EAAU2B,UAAY,CACpBzB,KAAM0B,IAAUC,OAAOC,YAGV9B,YAER,IAAM+B,EAAS","file":"component---src-pages-index-js-134422cabe83ab4c3afb.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { Layout, Hero, About, Featured, Projects, Contact, BlogPosts } from '@components';\r\nimport styled from 'styled-components';\r\nimport { mixins, Main } from '@styles';\r\n\r\nconst MainContainer = styled(Main)`\r\n  ${mixins.sidePadding};\r\n  counter-reset: section;\r\n`;\r\n\r\nconst IndexPage = ({ data }) => {\r\n  // scroll to the specific section if the site is loaded again\r\n  useEffect(() => {\r\n    if (window.location.href.indexOf('#') !== -1) {\r\n      const url = window.location.href;\r\n      const id = url.split('#')[1];\r\n      const element = document.getElementById(id);\r\n      try {\r\n        element.scrollIntoView();\r\n      } catch {\r\n        // do nothing\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Layout showMeta={true}>\r\n      <MainContainer id=\"content\">\r\n        <Hero data={data.hero.edges} />\r\n        <About data={data.about.edges} />\r\n        <Featured data={data.featured.edges} />\r\n        <Projects data={data.projects.edges} />\r\n        <BlogPosts data={data.blogPosts.edges} />\r\n        <Contact data={data.contact.edges} />\r\n      </MainContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nIndexPage.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            name\r\n            subtitle\r\n            contactText\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            avatar {\r\n              childImageSharp {\r\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n            skills\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    featured: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n            tech\r\n            github\r\n            external\r\n            show\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    projects: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            image\r\n            tech\r\n            github\r\n            external\r\n            show\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    blogPosts: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: 6\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date\r\n            slug\r\n            tags\r\n            show\r\n            authorName\r\n            authorImg {\r\n              childImageSharp {\r\n                fluid(maxWidth: 30, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n            featuredImg {\r\n              childImageSharp {\r\n                fluid(maxWidth: 300, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n          timeToRead\r\n          excerpt(pruneLength: 300)\r\n          html\r\n        }\r\n      }\r\n    }\r\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}