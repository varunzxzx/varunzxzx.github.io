{"version":3,"sources":["webpack:///./src/components/emoji.js","webpack:///./src/components/image.js","webpack:///./src/templates/blog-post.js"],"names":["Emoji","props","react_default","a","createElement","react_emoji_render_lib","text","children","toString","svg","onlyEmojiClassName","ImageBox","styled","div","withConfig","displayName","componentId","theme","colors","white","fontSizes","medium","Image","render","_this$props","this","caption","alt","src","layout","console","log","className","React","Component","MainContainer","Main","mixins","sidePadding","CommentsContainer","green","HeroContainer","Section","flexCenter","media","tablet","_templateObject","Title","h1","desktop","_templateObject2","_templateObject3","phablet","_templateObject4","phone","_templateObject5","Author","h3","small","fonts","SFMono","_templateObject6","_templateObject7","smallish","Avatar","Img","FeaturedImage","PostBody","_templateObject8","Meta","_templateObject9","_templateObject10","Credits","PostLinks","large","_templateObject11","renderAst","rehypeReact","components","emoji","editor","Loadable","loader","Promise","all","__webpack_require__","e","then","bind","loading","image-box","Compiler","BlogPostTemplate","post","data","markdownRemark","site","pageContext","previous","next","imgUrl","path","join","frontmatter","featuredImg","childImageSharp","fluid","pageUrl","slug","pageTitle","title","siteMetadata","pageDescription","excerpt","components_layout","showMeta","Helmet_default","itemProp","lang","name","content","tags","property","id","timeToRead","map","tag","htmlAst","authorImg","authorName","date","gatsby_browser_entry","to","lib_default","DiscussionEmbed","shortname","config","url","identifier","filePath","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-cabb5132e5d41951fcc3.js","sourcesContent":["import React from 'react';\nimport { Twemoji } from 'react-emoji-render';\n\nconst Emoji = props => <Twemoji text={props.children.toString()} svg onlyEmojiClassName=\"emoji\" />;\n\nexport default Emoji;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { theme } from '../styles';\n\nconst ImageBox = styled.div`\n  display: block;\n  text-align: center;\n  margin-bottom: 0.5em;\n\n  img {\n    max-width: 100%;\n    display: inline-block;\n    border: 3px solid #fff;\n  }\n\n  .caption {\n    display: block;\n    color: ${theme.colors.white};\n    font-size: ${theme.fontSizes.medium};\n  }\n\n  &.inline-left {\n    display: inline-block;\n    float: left;\n    width: unset;\n    margin-right: 1em;\n    margin-bottom: 0;\n  }\n`;\n\nclass Image extends React.Component {\n  render() {\n    const { caption, alt, src, layout } = this.props;\n    console.log(this.props);\n\n    return (\n      <ImageBox className={layout}>\n        <img alt={alt || caption} src={src} />\n        <span className=\"caption\">{caption}</span>\n      </ImageBox>\n    );\n  }\n}\n\nexport default Image;\n","import path from 'path';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport { Link, graphql } from 'gatsby';\nimport Disqus from 'disqus-react';\nimport Helmet from 'react-helmet';\nimport Loadable from 'react-loadable';\nimport rehypeReact from 'rehype-react';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport Emoji from '../components/emoji';\nimport Image from '../components/image';\nimport { theme, mixins, media, Main, Section } from '../styles';\n\nconst MainContainer = styled(Main)`\n  ${mixins.sidePadding};\n  counter-reset: section;\n`;\n\nconst CommentsContainer = styled.div`\n  .reaction-item__button {\n    border-color: ${theme.colors.green};\n  }\n`;\n\nconst HeroContainer = styled(Section)`\n  ${mixins.flexCenter};\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  min-height: 100vh;\n  padding-top: 200px;\n  ${media.tablet`padding-top: 150px;`};\n  div {\n    width: 100%;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 80px;\n  line-height: 1.1;\n  margin: 0;\n  ${media.desktop`font-size: 70px;`};\n  ${media.tablet`font-size: 60px;`};\n  ${media.phablet`font-size: 50px;`};\n  ${media.phone`font-size: 40px;`};\n`;\n\nconst Author = styled.h3`\n  display: inline;\n  color: ${theme.colors.green};\n  margin: 0 0 20px 3px;\n  font-size: ${theme.fontSizes.small};\n  font-family: ${theme.fonts.SFMono};\n  font-weight: normal;\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\n`;\n\nconst Avatar = styled(Img)`\n  width: 30px;\n  max-width: 30px;\n  max-height: 30px;\n  vertical-align: middle;\n  position: relative;\n  display: inline-block;\n  border-radius: 50%;\n  border: 3px solid #fff;\n  margin-right: 10px;\n`;\n\nconst FeaturedImage = styled(Img)`\n  width: 100%;\n  vertical-align: middle;\n  position: relative;\n  border: 3px solid #fff;\n  margin-top: 20px;\n`;\n\nconst PostBody = styled.div`\n  margin-top: 40px;\n  strong {\n    color: white;\n  }\n  .emoji {\n    margin-right: 5px;\n    img {\n      vertical-align: middle;\n    }\n  }\n  ul {\n    list-style-type: '# ';\n  }\n  ul,\n  ol {\n    li {\n      margin-block-end: 0.5em;\n      margin-block-start: 0.5em;\n    }\n    ${media.phone`\n    padding-inline-start: 15px;\n  `};\n  }\n  a {\n    color: ${theme.colors.green};\n  }\n  blockquote {\n    border-left: 3px solid;\n    box-sizing: border-box;\n    padding: 0.5em 1em;\n    margin: 0;\n    margin-bottom: 0px;\n    margin-bottom: 1em;\n    p {\n      margin: 0;\n    }\n  }\n  ol {\n    li {\n      list-style: none;\n      counter-increment: item 1;\n      &::before {\n        content: '0' counter(item) '.';\n        text-align: right;\n        color: #64ffda;\n        margin-right: 0.5em;\n        font-size: 14px;\n        font-family: SF Mono, Fira Code, Fira Mono, monospace;\n      }\n    }\n  }\n`;\n\nconst Meta = styled.h3`\n  display: inline;\n  color: ${theme.colors.green};\n  margin: 0 0 20px 3px;\n  font-size: ${theme.fontSizes.small};\n  font-family: ${theme.fonts.SFMono};\n  font-weight: normal;\n  word-wrap: break-word;\n  ${media.desktop`font-size: ${theme.fontSizes.small};`};\n  ${media.tablet`font-size: ${theme.fontSizes.smallish};`};\n  .tag {\n    margin-left: 10px;\n  }\n  .read-time {\n    margin-right: 20px;\n  }\n`;\n\nconst Credits = styled.div`\n  margin-top: 20px;\n  margin-bottom: 40px;\n`;\n\nconst PostLinks = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 40px;\n  .next {\n    text-align: right;\n  }\n  .prevous {\n    text-align: left;\n  }\n  .previous,\n  .next {\n    flex: 1;\n    border-radius: 2px;\n    max-width: calc(50% - 15px);\n    padding: 10px 20px;\n    background: #172a45;\n    .title {\n      color: white;\n      font-size: 20px;\n      margin-bottom: 0;\n    }\n    .pos {\n      color: ${theme.colors.green};\n      font-size: ${theme.fontSizes.small};\n      margin-bottom: 5px;\n    }\n    .empty {\n      text-align: center;\n      margin-bottom: 0;\n      position: relative;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n    .excerpt {\n      font-size: ${theme.fontSizes.large};\n      margin-bottom: 0px;\n    }\n    ${Meta} {\n      font-size: 12px;\n      margin-bottom: 0;\n    }\n    &:hover {\n      -webkit-transform: translateY(-5px);\n      -ms-transform: translateY(-5px);\n      transform: translateY(-5px);\n      box-shadow: 0 2px 4px rgba(2, 12, 27, 0.9);\n    }\n  }\n  ${media.tablet`\n  flex-direction: column;\n    .next, .previous {\n      max-width: 100%;\n    }\n\n    .previous {\n      margin-bottom: 20px;\n    }\n\n    .next.latest, .previous.first {\n      display: none;\n    }\n  `}\n`;\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components: {\n    emoji: Emoji,\n    editor: Loadable({\n      loader: () => import('../components/editor'),\n      loading: () => null,\n    }),\n    'image-box': Image,\n  },\n}).Compiler;\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const site = this.props.data.site;\n    const pageContext = this.props.pageContext;\n    const { previous, next } = pageContext;\n\n    const imgUrl = `https://${path.join(\n      'varunzxzx.github.io/',\n      post.frontmatter.featuredImg.childImageSharp.fluid.src,\n    )}`;\n    const pageUrl = `https://${path.join('varunzxzx.gituhb.io/', post.frontmatter.slug, '/')}`;\n    const pageTitle = `${post.frontmatter.title} | ${site.siteMetadata.title}`;\n    const pageDescription = post.excerpt;\n\n    return (\n      <Layout showMeta={false}>\n        <Helmet>\n          <title itemProp=\"name\" lang=\"en\">\n            {pageTitle}\n          </title>\n          <meta name=\"description\" content={pageDescription} />\n          <meta name=\"keywords\" content={(post.frontmatter.tags || []).join(',')} />\n          <meta property=\"og:title\" content={pageTitle} />\n          <meta property=\"og:description\" content={pageDescription} />\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:url\" content={pageUrl} />\n          <meta property=\"og:site_name\" content={site.siteMetadata.title} />\n          <meta property=\"og:image\" content={imgUrl} />\n          <meta itemProp=\"name\" content={site.siteMetadata.title} />\n          <meta itemProp=\"description\" content={pageDescription} />\n          <meta itemProp=\"image\" content={imgUrl} />\n          <meta name=\"twitter:url\" content={pageUrl} />\n          <meta name=\"twitter:title\" content={pageTitle} />\n          <meta name=\"twitter:description\" content={pageDescription} />\n          <meta name=\"twitter:image:src\" content={imgUrl} />\n          <meta name=\"twitter:image:alt\" content={pageTitle} />\n        </Helmet>\n        <MainContainer id=\"content\">\n          <HeroContainer>\n            <Title>{post.frontmatter.title}</Title>\n            <div>\n              <Meta>\n                <span className=\"read-time\">\n                  {post.timeToRead} Min{post.timeToRead > 1 ? 's' : ''} Read\n                </span>\n                {(post.frontmatter.tags || []).map(tag => (\n                  <span className=\"tag\">#{tag}</span>\n                ))}\n              </Meta>\n            </div>\n            <FeaturedImage\n              fluid={post.frontmatter.featuredImg.childImageSharp.fluid}\n              alt={post.frontmatter.title}\n            />\n            <PostBody>{renderAst(post.htmlAst)}</PostBody>\n            <Credits>\n              <Avatar fluid={post.frontmatter.authorImg.childImageSharp.fluid} alt=\"Avatar\" />\n              <Author>\n                By {post.frontmatter.authorName} on {post.frontmatter.date}\n              </Author>\n            </Credits>\n            <PostLinks>\n              {previous ? (\n                <Link className={'previous'} to={previous.frontmatter.slug}>\n                  <p className=\"pos\">{'<< previous'}</p>\n                  <h3 className=\"title\">{previous.frontmatter.title}</h3>\n                  <p className=\"excerpt\">{previous.excerpt}</p>\n                  <Meta>\n                    <span className=\"read-time\">\n                      {previous.timeToRead} {previous.timeToRead > 1 ? 'Mins' : 'Min'} Read\n                    </span>\n                    {(previous.frontmatter.tags || []).map(tag => (\n                      <span className=\"tag\">#{tag}</span>\n                    ))}\n                  </Meta>\n                </Link>\n              ) : (\n                <div className=\"previous first\">\n                  <p className=\"empty\">This is the first post.</p>\n                </div>\n              )}\n              {next ? (\n                <Link className={'next'} to={next.frontmatter.slug}>\n                  <p className=\"pos\">{'next >>'}</p>\n                  <h3 className=\"title\">{next.frontmatter.title}</h3>\n                  <p className=\"excerpt\">{next.excerpt}</p>\n                  <Meta>\n                    <span className=\"read-time\">\n                      {next.timeToRead} {next.timeToRead > 1 ? 'Mins' : 'Min'} Read\n                    </span>\n                    {(next.frontmatter.tags || []).map(tag => (\n                      <span className=\"tag\">#{tag}</span>\n                    ))}\n                  </Meta>\n                </Link>\n              ) : (\n                <div className=\"next latest\">\n                  <p className=\"empty\">This is the latest post</p>\n                </div>\n              )}\n            </PostLinks>\n            <CommentsContainer>\n              <Disqus.DiscussionEmbed\n                shortname={'varunzxzx'}\n                config={{\n                  url: `https://varunzxzx.github.io${post.frontmatter.slug}`,\n                  identifier: pageContext.filePath,\n                  title: post.frontmatter.title,\n                }}\n              />\n            </CommentsContainer>\n          </HeroContainer>\n        </MainContainer>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      excerpt(pruneLength: 160)\n      htmlAst\n      timeToRead\n      frontmatter {\n        title\n        slug\n        show\n        tags\n        date\n        authorName\n        featuredImg {\n          childImageSharp {\n            fluid(maxWidth: 1000, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n              src\n            }\n          }\n        }\n        authorImg {\n          childImageSharp {\n            fluid(maxWidth: 30, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}