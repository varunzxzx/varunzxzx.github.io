{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_styles__WEBPACK_IMPORTED_MODULE_4__","MainContainer","styled","Main","withConfig","displayName","componentId","mixins","sidePadding","IndexPage","_ref","data","a","createElement","showMeta","id","hero","edges","about","featured","projects","blogPosts","contact","propTypes","PropTypes","object","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAOMa,EAAgBC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,+BACfK,IAAOC,aAILC,EAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChBjB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,CAAQgB,UAAU,GAChBpB,EAAAkB,EAAAC,cAACZ,EAAD,CAAec,GAAG,WAChBrB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,CAAMa,KAAMA,EAAKK,KAAKC,QACtBvB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,CAAOa,KAAMA,EAAKO,MAAMD,QACxBvB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,CAAUa,KAAMA,EAAKQ,SAASF,QAC9BvB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,CAAUa,KAAMA,EAAKS,SAASH,QAC9BvB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,CAAWa,KAAMA,EAAKU,UAAUJ,QAChCvB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,CAASa,KAAMA,EAAKW,QAAQL,WAKlCR,EAAUc,UAAY,CACpBZ,KAAMa,IAAUC,OAAOC,YAGVjB,YAER,IAAMjB,EAAS","file":"component---src-pages-index-js-ba73e5ff082120c31ce7.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Layout, Hero, About, Featured, Projects, Contact, BlogPosts } from '@components';\nimport styled from 'styled-components';\nimport { mixins, Main } from '@styles';\n\nconst MainContainer = styled(Main)`\n  ${mixins.sidePadding};\n  counter-reset: section;\n`;\n\nconst IndexPage = ({ data }) => (\n  <Layout showMeta={true}>\n    <MainContainer id=\"content\">\n      <Hero data={data.hero.edges} />\n      <About data={data.about.edges} />\n      <Featured data={data.featured.edges} />\n      <Projects data={data.projects.edges} />\n      <BlogPosts data={data.blogPosts.edges} />\n      <Contact data={data.contact.edges} />\n    </MainContainer>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  {\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            name\n            subtitle\n            contactText\n          }\n          html\n        }\n      }\n    }\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            avatar {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            skills\n          }\n          html\n        }\n      }\n    }\n    featured: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            tech\n            github\n            external\n            show\n          }\n          html\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            image\n            tech\n            github\n            external\n            show\n          }\n          html\n        }\n      }\n    }\n    blogPosts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 6\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            slug\n            tags\n            show\n            authorName\n            authorImg {\n              childImageSharp {\n                fluid(maxWidth: 30, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            featuredImg {\n              childImageSharp {\n                fluid(maxWidth: 300, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n          timeToRead\n          excerpt(pruneLength: 300)\n          html\n        }\n      }\n    }\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}